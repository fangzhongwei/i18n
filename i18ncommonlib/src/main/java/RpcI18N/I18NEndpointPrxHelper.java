// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `i18n.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RpcI18N;

/**
 * Provides type-specific helper functions.
 **/
public final class I18NEndpointPrxHelper extends Ice.ObjectPrxHelperBase implements I18NEndpointPrx
{
    private static final String __getLatest_name = "getLatest";

    public ResourceResponse getLatest(String traceId, String lan)
    {
        return getLatest(traceId, lan, null, false);
    }

    public ResourceResponse getLatest(String traceId, String lan, java.util.Map<String, String> __ctx)
    {
        return getLatest(traceId, lan, __ctx, true);
    }

    private ResourceResponse getLatest(String traceId, String lan, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getLatest_name);
        return end_getLatest(begin_getLatest(traceId, lan, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getLatest(String traceId, String lan)
    {
        return begin_getLatest(traceId, lan, null, false, false, null);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, String lan, java.util.Map<String, String> __ctx)
    {
        return begin_getLatest(traceId, lan, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, String lan, Ice.Callback __cb)
    {
        return begin_getLatest(traceId, lan, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, String lan, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getLatest(traceId, lan, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, String lan, Callback_I18NEndpoint_getLatest __cb)
    {
        return begin_getLatest(traceId, lan, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, String lan, java.util.Map<String, String> __ctx, Callback_I18NEndpoint_getLatest __cb)
    {
        return begin_getLatest(traceId, lan, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, 
                                           String lan, 
                                           IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLatest(traceId, lan, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, 
                                           String lan, 
                                           IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLatest(traceId, lan, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, 
                                           String lan, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLatest(traceId, lan, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLatest(String traceId, 
                                           String lan, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLatest(traceId, lan, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getLatest(String traceId, 
                                            String lan, 
                                            java.util.Map<String, String> __ctx, 
                                            boolean __explicitCtx, 
                                            boolean __synchronous, 
                                            IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLatest(traceId, lan, __ctx, __explicitCtx, __synchronous, 
                               new IceInternal.Functional_TwowayCallbackArg1<ResourceResponse>(__responseCb, __exceptionCb, __sentCb)
                                   {
                                       public final void __completed(Ice.AsyncResult __result)
                                       {
                                           I18NEndpointPrxHelper.__getLatest_completed(this, __result);
                                       }
                                   });
    }

    private Ice.AsyncResult begin_getLatest(String traceId, 
                                            String lan, 
                                            java.util.Map<String, String> __ctx, 
                                            boolean __explicitCtx, 
                                            boolean __synchronous, 
                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getLatest_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getLatest_name, __cb);
        try
        {
            __result.prepare(__getLatest_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(traceId);
            __os.writeString(lan);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public ResourceResponse end_getLatest(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getLatest_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            ResourceResponseHolder __ret = new ResourceResponseHolder();
            __is.readObject(__ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret.value;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getLatest_completed(Ice.TwowayCallbackArg1<ResourceResponse> __cb, Ice.AsyncResult __result)
    {
        I18NEndpointPrx __proxy = (I18NEndpointPrx)__result.getProxy();
        ResourceResponse __ret = null;
        try
        {
            __ret = __proxy.end_getLatest(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __pullLatest_name = "pullLatest";

    public ResourceResponse pullLatest(String traceId, PullResourceRequest request)
    {
        return pullLatest(traceId, request, null, false);
    }

    public ResourceResponse pullLatest(String traceId, PullResourceRequest request, java.util.Map<String, String> __ctx)
    {
        return pullLatest(traceId, request, __ctx, true);
    }

    private ResourceResponse pullLatest(String traceId, PullResourceRequest request, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__pullLatest_name);
        return end_pullLatest(begin_pullLatest(traceId, request, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, PullResourceRequest request)
    {
        return begin_pullLatest(traceId, request, null, false, false, null);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, PullResourceRequest request, java.util.Map<String, String> __ctx)
    {
        return begin_pullLatest(traceId, request, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, PullResourceRequest request, Ice.Callback __cb)
    {
        return begin_pullLatest(traceId, request, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, PullResourceRequest request, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_pullLatest(traceId, request, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, PullResourceRequest request, Callback_I18NEndpoint_pullLatest __cb)
    {
        return begin_pullLatest(traceId, request, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, PullResourceRequest request, java.util.Map<String, String> __ctx, Callback_I18NEndpoint_pullLatest __cb)
    {
        return begin_pullLatest(traceId, request, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, 
                                            PullResourceRequest request, 
                                            IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_pullLatest(traceId, request, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, 
                                            PullResourceRequest request, 
                                            IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pullLatest(traceId, request, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, 
                                            PullResourceRequest request, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_pullLatest(traceId, request, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_pullLatest(String traceId, 
                                            PullResourceRequest request, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pullLatest(traceId, request, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_pullLatest(String traceId, 
                                             PullResourceRequest request, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_GenericCallback1<ResourceResponse> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pullLatest(traceId, request, __ctx, __explicitCtx, __synchronous, 
                                new IceInternal.Functional_TwowayCallbackArg1<ResourceResponse>(__responseCb, __exceptionCb, __sentCb)
                                    {
                                        public final void __completed(Ice.AsyncResult __result)
                                        {
                                            I18NEndpointPrxHelper.__pullLatest_completed(this, __result);
                                        }
                                    });
    }

    private Ice.AsyncResult begin_pullLatest(String traceId, 
                                             PullResourceRequest request, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__pullLatest_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__pullLatest_name, __cb);
        try
        {
            __result.prepare(__pullLatest_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(traceId);
            __os.writeObject(request);
            __os.writePendingObjects();
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public ResourceResponse end_pullLatest(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __pullLatest_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            ResourceResponseHolder __ret = new ResourceResponseHolder();
            __is.readObject(__ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret.value;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __pullLatest_completed(Ice.TwowayCallbackArg1<ResourceResponse> __cb, Ice.AsyncResult __result)
    {
        I18NEndpointPrx __proxy = (I18NEndpointPrx)__result.getProxy();
        ResourceResponse __ret = null;
        try
        {
            __ret = __proxy.end_pullLatest(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static I18NEndpointPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), I18NEndpointPrx.class, I18NEndpointPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static I18NEndpointPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), I18NEndpointPrx.class, I18NEndpointPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static I18NEndpointPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), I18NEndpointPrx.class, I18NEndpointPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static I18NEndpointPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), I18NEndpointPrx.class, I18NEndpointPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static I18NEndpointPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, I18NEndpointPrx.class, I18NEndpointPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static I18NEndpointPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, I18NEndpointPrx.class, I18NEndpointPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::RpcI18N::I18NEndpoint"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, I18NEndpointPrx v)
    {
        __os.writeProxy(v);
    }

    public static I18NEndpointPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            I18NEndpointPrxHelper result = new I18NEndpointPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
